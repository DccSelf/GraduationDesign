<?xml version="1.0"?>
<!DOCTYPE HPCToolkitExperiment [
<!-- ******************************************************************** -->
<!-- HPCToolkit Experiment DTD						  -->
<!-- Version 2.2							  -->
<!-- ******************************************************************** -->
<!ELEMENT HPCToolkitExperiment (Header, (SecCallPathProfile|SecFlatProfile)*)>
<!ATTLIST HPCToolkitExperiment
	  version CDATA #REQUIRED>

  <!-- ****************************************************************** -->

  <!-- Info/NV: flexible name-value pairs: (n)ame; (t)ype; (v)alue -->
  <!ELEMENT Info (NV*)>
  <!ATTLIST Info
	    n CDATA #IMPLIED>
  <!ELEMENT NV EMPTY>
  <!ATTLIST NV
	    n CDATA #REQUIRED
	    t CDATA #IMPLIED
	    v CDATA #REQUIRED>

  <!-- ****************************************************************** -->
  <!-- Header								  -->
  <!-- ****************************************************************** -->
  <!ELEMENT Header (Info*)>
  <!ATTLIST Header
	    n CDATA #REQUIRED>

  <!-- ****************************************************************** -->
  <!-- Section Header							  -->
  <!-- ****************************************************************** -->
  <!ELEMENT SecHeader (MetricTable?, MetricDBTable?, TraceDBTable?, LoadModuleTable?, FileTable?, ProcedureTable?, Info*)>

    <!-- MetricTable: -->
    <!ELEMENT MetricTable (Metric)*>

    <!-- Metric: (i)d; (n)ame -->
    <!--   o: metric sequence order (hpcrun metric order) -->
    <!--   md: metric description -->
    <!--   mp: metric parent ID   -->
    <!--   es: number of samples    (perf_events only) -->
    <!--   em: event multiplexed    (perf_events only) -->
    <!--   ep: average event period (perf_events only) -->
    <!--   (v)alue-type: transient type of values -->
    <!--   (t)ype: persistent type of metric      -->
    <!--   show: metric visibility type. Possible values: -->
    <!--        0: hidden -->
    <!--        1: shown  -->
    <!--        2: show inclusive metric only -->
    <!--        3: show exclusive metric only -->
    <!--        4: invisible, do not show at all -->
    <!--   show-percent: whether to show the percent (1) or not (0)  -->
    <!--   partner: the exclusive or inclusive partner ID of this metric -->
    <!--   fmt: format; show; -->
    <!ELEMENT Metric (MetricFormula*, Info?)>
    <!ATTLIST Metric
	      i            CDATA #REQUIRED
	      o	           CDATA #IMPLIED
	      n            CDATA #REQUIRED
	      md           CDATA #IMPLIED
	      mp           CDATA #IMPLIED
	      es           CDATA #IMPLIED
	      em           CDATA #IMPLIED
	      ep           CDATA #IMPLIED
	      v            (raw|final|derived-incr|derived) "raw"
	      t            (inclusive|exclusive|nil) "nil"
	      partner      CDATA #IMPLIED
	      fmt          CDATA #IMPLIED
	      show         (1|0|2|3|4) "1"
	      show-percent (1|0) "1">

    <!-- MetricFormula represents derived metrics: (t)ype; (frm): formula -->
    <!ELEMENT MetricFormula (Info?)>
    <!ATTLIST MetricFormula
	      t   (combine|finalize|view) "finalize"
	      i   CDATA #IMPLIED
	      frm CDATA #REQUIRED>

    <!-- Metric data, used in sections: (n)ame [from Metric]; (v)alue -->
    <!ELEMENT M EMPTY>
    <!ATTLIST M
	      n CDATA #REQUIRED
	      v CDATA #REQUIRED>

    <!-- MetricDBTable: -->
    <!ELEMENT MetricDBTable (MetricDB)*>

    <!-- MetricDB: (i)d; (n)ame -->
    <!--   (t)ype: persistent type of metric -->
    <!--   db-glob:        file glob describing files in metric db -->
    <!--   db-id:          id within metric db -->
    <!--   db-num-metrics: number of metrics in db -->
    <!--   db-header-sz:   size (in bytes) of a db file header -->
    <!ELEMENT MetricDB EMPTY>
    <!ATTLIST MetricDB
	      i              CDATA #REQUIRED
	      n              CDATA #REQUIRED
	      t              (inclusive|exclusive|nil) "nil"
	      partner        CDATA #IMPLIED
	      db-glob        CDATA #IMPLIED
	      db-id          CDATA #IMPLIED
	      db-num-metrics CDATA #IMPLIED
	      db-header-sz   CDATA #IMPLIED>

    <!-- TraceDBTable: -->
    <!ELEMENT TraceDBTable (TraceDB)>

    <!-- TraceDB: (i)d -->
    <!--   u: unit time of the trace (ms, ns, ..) -->
    <!--   db-min-time: min beginning time stamp (global) -->
    <!--   db-max-time: max ending time stamp (global) -->
    <!ELEMENT TraceDB EMPTY>
    <!ATTLIST TraceDB
	      i            CDATA #REQUIRED
	      u            CDATA #IMPLIED
	      db-glob      CDATA #IMPLIED
	      db-min-time  CDATA #IMPLIED
	      db-max-time  CDATA #IMPLIED
	      db-header-sz CDATA #IMPLIED>

    <!-- LoadModuleTable assigns a short name to a load module -->
    <!ELEMENT LoadModuleTable (LoadModule)*>

    <!ELEMENT LoadModule (Info?)>
    <!ATTLIST LoadModule
	      i CDATA #REQUIRED
	      n CDATA #REQUIRED>

    <!-- FileTable assigns a short name to a file -->
    <!ELEMENT FileTable (File)*>

    <!ELEMENT File (Info?)>
    <!ATTLIST File
	      i CDATA #REQUIRED
	      n CDATA #REQUIRED>

    <!-- ProcedureTable assigns a short name to a procedure -->
    <!ELEMENT ProcedureTable (Procedure)*>

    <!-- Dictionary for procedure: (i)d, (n)ame, (f)eature and (v)alue of the address -->
    <!-- Possible value of f: -->
    <!-- 0: normal procedure -->
    <!-- 1: place holder, do not add anything -->
    <!-- 2: root-type, has to be shown in a separate view -->
    <!-- 3: invisible in hpcviewer, but visible in hpctraceviewer  -->
    <!ELEMENT Procedure (Info?)>
    <!ATTLIST Procedure
	      i CDATA #REQUIRED
	      n CDATA #REQUIRED
	      f CDATA #IMPLIED
	      v CDATA #IMPLIED>

  <!-- ****************************************************************** -->
  <!-- Section: Call path profile					  -->
  <!-- ****************************************************************** -->
  <!ELEMENT SecCallPathProfile (SecHeader, SecCallPathProfileData)>
  <!ATTLIST SecCallPathProfile
	    i CDATA #REQUIRED
	    n CDATA #REQUIRED>

    <!ELEMENT SecCallPathProfileData (PF|M)*>
      <!-- Procedure frame -->
      <!--   (i)d: unique identifier for cross referencing -->
      <!--   (s)tatic scope id -->
      <!--   (n)ame: a string or an id in ProcedureTable -->
      <!--   (lm) load module: a string or an id in LoadModuleTable -->
      <!--   (f)ile name: a string or an id in LoadModuleTable -->
      <!--   (l)ine range: "beg-end" (inclusive range) -->
      <!--   (a)lien: whether frame is alien to enclosing P -->
      <!--   (str)uct: hpcstruct node id -->
      <!--   (v)ma-range-set: "{[beg-end), [beg-end)...}" -->
      <!ELEMENT PF (PF|Pr|L|C|S|M)*>
      <!ATTLIST PF
		i  CDATA #IMPLIED
		s  CDATA #IMPLIED
		n  CDATA #REQUIRED
		lm CDATA #IMPLIED
		f  CDATA #IMPLIED
		l  CDATA #IMPLIED
		str  CDATA #IMPLIED
		v  CDATA #IMPLIED>
      <!-- Procedure (static): GOAL: replace with 'P' -->
      <!ELEMENT Pr (Pr|L|C|S|M)*>
      <!ATTLIST Pr
                i  CDATA #IMPLIED
		s  CDATA #IMPLIED
                n  CDATA #REQUIRED
		lm CDATA #IMPLIED
		f  CDATA #IMPLIED
                l  CDATA #IMPLIED
		a  (1|0) "0"
		str  CDATA #IMPLIED
		v  CDATA #IMPLIED>
      <!-- Callsite (a special StatementRange) -->
      <!ELEMENT C (PF|M)*>
      <!ATTLIST C
		i CDATA #IMPLIED
		s CDATA #IMPLIED
		l CDATA #IMPLIED
		str CDATA #IMPLIED
		v CDATA #IMPLIED>

  <!-- ****************************************************************** -->
  <!-- Section: Flat profile						  -->
  <!-- ****************************************************************** -->
  <!ELEMENT SecFlatProfile (SecHeader, SecFlatProfileData)>
  <!ATTLIST SecFlatProfile
	    i CDATA #REQUIRED
	    n CDATA #REQUIRED>

    <!ELEMENT SecFlatProfileData (LM|M)*>
      <!-- Load module: (i)d; (n)ame; (v)ma-range-set -->
      <!ELEMENT LM (F|P|M)*>
      <!ATTLIST LM
                i CDATA #IMPLIED
                n CDATA #REQUIRED
		v CDATA #IMPLIED>
      <!-- File -->
      <!ELEMENT F (P|L|S|M)*>
      <!ATTLIST F
                i CDATA #IMPLIED
                n CDATA #REQUIRED>
      <!-- Procedure (Note 1) -->
      <!ELEMENT P (P|A|L|S|C|M)*>
      <!ATTLIST P
                i CDATA #IMPLIED
                n CDATA #REQUIRED
                l CDATA #IMPLIED
		str CDATA #IMPLIED
		v CDATA #IMPLIED>
      <!-- Alien (Note 1) -->
      <!ELEMENT A (A|L|S|C|M)*>
      <!ATTLIST A
                i CDATA #IMPLIED
                f CDATA #IMPLIED
                n CDATA #IMPLIED
                l CDATA #IMPLIED
		str CDATA #IMPLIED
		v CDATA #IMPLIED>
      <!-- Loop (Note 1,2) -->
      <!ELEMENT L (A|Pr|L|S|C|M)*>
      <!ATTLIST L
		i CDATA #IMPLIED
		s CDATA #IMPLIED
		l CDATA #IMPLIED
	        f CDATA #IMPLIED
		str CDATA #IMPLIED
		v CDATA #IMPLIED>
      <!-- Statement (Note 2) -->
      <!--   (it): trace record identifier -->
      <!ELEMENT S (S|M)*>
      <!ATTLIST S
		i  CDATA #IMPLIED
		it CDATA #IMPLIED
		s  CDATA #IMPLIED
		l  CDATA #IMPLIED
		str  CDATA #IMPLIED
		v  CDATA #IMPLIED>
      <!-- Note 1: Contained Cs may not contain PFs -->
      <!-- Note 2: The 's' attribute is not used for flat profiles -->
]>
<HPCToolkitExperiment version="2.2">
<Header n="gemm">
  <Info/>
</Header>
<SecCallPathProfile i="0" n="gemm">
<SecHeader>
  <MetricTable>
    <Metric i="0" n="CPUTIME (sec).[0,0]" o="0" v="raw" md="CPUTIME (sec)" em="0" es="0" ep="0" t="nil" show="1" show-percent="1">
      <Info><NV n="units" v="events"/><NV n="period" v="1"/></Info>
    </Metric>
  </MetricTable>
  <MetricDBTable>
  </MetricDBTable>
  <LoadModuleTable>
    <LoadModule i="2" n="/thfs1/home/penglin/dcc/sycl-bench/test/applications/gemm"/>
    <LoadModule i="2981" n="/thfs1/software/spack/opt/linux-ubuntu19.04-aarch64/gcc-8.3.0/hpctoolkit-2020.08.03-ujonwt7/lib/hpctoolkit/ext-libs/libmonitor.so.0.0.0"/>
    <LoadModule i="2985" n="/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28"/>
    <LoadModule i="2991" n="/thfs1/home/penglin/dcc/sycl_workspace/llvm-2022-06/build/lib/libsycl.so.5.7.0-0"/>
    <LoadModule i="3006" n="/usr/lib/aarch64-linux-gnu/libc-2.31.so"/>
  </LoadModuleTable>
  <FileTable>
    <File i="3" n="&lt;unknown file&gt; [gemm]"/>
    <File i="2982" n="/thfs1/home/spack/.spack/stage/spack-stage-libmonitor-2019.05.31-67hnfb3i4rvatpzrysokbyrfwtr4pl46/spack-src/src/main.c"/>
    <File i="2986" n="&lt;unknown file&gt; [libstdc++.so.6.0.28]"/>
    <File i="2992" n="&lt;unknown file&gt; [libsycl.so.5.7.0-0]"/>
    <File i="2995" n="leaves_collection.cpp"/>
    <File i="3007" n="&lt;unknown file&gt; [libc-2.31.so]"/>
  </FileTable>
  <ProcedureTable>
    <Procedure i="89" n="operator delete(void*)@plt" v="0x4035e0"/>
    <Procedure i="260" n="main" v="0x403fa4"/>
    <Procedure i="323" n="BenchmarkApp::run&lt;Polybench_Gemm&gt;()" v="0x4044fc"/>
    <Procedure i="1305" n="BenchmarkManager&lt;Polybench_Gemm&gt;::run&lt;&gt;()" v="0x40b32c"/>
    <Procedure i="1445" n="std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::count(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const" v="0x40c410"/>
    <Procedure i="1460" n="Polybench_Gemm::run(std::vector&lt;cl::sycl::event, std::allocator&lt;cl::sycl::event&gt; &gt;&amp;)" v="0x40c978"/>
    <Procedure i="1502" n="Polybench_Gemm::verify(VerificationSetting&amp;)" v="0x40cdb0"/>
    <Procedure i="1785" n="std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_default_append(unsigned long)" v="0x40f32c"/>
    <Procedure i="2422" n="_ZN2cl4sycl6detail17NDLoopIterateImplILi1ELi0ENS0_5rangeEZNS1_10HostKernelISt8functionIFvRKNS0_7nd_itemILi1EEEEES7_Li1EE9runOnHostIS7_EENSt9enable_ifIXsr3std7is_sameIT_S7_EE5valueEvE4typeERKNS1_8NDRDescTEEUlRKNS0_2idILi1EEEE_S3_EC2ERKNS3_ILi1EEEST_ST_SP_RSR_" v="0x41396c"/>
    <Procedure i="2505" n="Polybench_Gemm::run(std::vector&lt;cl::sycl::event, std::allocator&lt;cl::sycl::event&gt; &gt;&amp;)::{lambda(cl::sycl::handler&amp;)#1}::operator()(cl::sycl::handler&amp;) const::{lambda(cl::sycl::item&lt;2, true&gt;)#1}::~item()" v="0x414420"/>
    <Procedure i="2737" n="cl::sycl::detail::HostKernel&lt;std::function&lt;void (cl::sycl::nd_item&lt;2&gt; const&amp;)&gt;, cl::sycl::nd_item&lt;2&gt;, 2&gt;::call(cl::sycl::detail::NDRDescT const&amp;, cl::sycl::detail::HostProfilingInfo*)" v="0x415f80"/>
    <Procedure i="2751" n="cl::sycl::detail::HostKernel&lt;std::function&lt;void (cl::sycl::nd_item&lt;2&gt; const&amp;)&gt;, cl::sycl::nd_item&lt;2&gt;, 2&gt;::~HostKernel()" v="0x4160d8"/>
    <Procedure i="2765" n="_ZN2cl4sycl6detail17NDLoopIterateImplILi2ELi1ENS0_5rangeEZNS1_10HostKernelISt8functionIFvRKNS0_7nd_itemILi2EEEEES7_Li2EE9runOnHostIS7_EENSt9enable_ifIXsr3std7is_sameIT_S7_EE5valueEvE4typeERKNS1_8NDRDescTEEUlRKNS0_2idILi2EEEE_S3_EC2ERKNS3_ILi2EEEST_ST_SP_RSR_" v="0x41625c"/>
    <Procedure i="2814" n="_ZNSt17_Function_handlerIFvRKN2cl4sycl7nd_itemILi2EEEEZNS1_7handler15ResetHostKernelIZZN14Polybench_Gemm3runERSt6vectorINS1_5eventESaISB_EEENKUlRS7_E_clESF_EUlNS1_4itemILi2ELb1EEEE_SI_Li2EEENSt9enable_ifIXsr3std7is_sameIT0_NSH_IXT1_ELb1EEEEE5valueEPT_E4typeERKSN_E20NormalizedKernelTypeE9_M_invokeERKSt9_Any_dataS5_" v="0x4169b8"/>
    <Procedure i="2816" n="_ZNSt14_Function_base13_Base_managerIZN2cl4sycl7handler15ResetHostKernelIZZN14Polybench_Gemm3runERSt6vectorINS2_5eventESaIS7_EEENKUlRS3_E_clESB_EUlNS2_4itemILi2ELb1EEEE_SE_Li2EEENSt9enable_ifIXsr3std7is_sameIT0_NSD_IXT1_ELb1EEEEE5valueEPT_E4typeERKSJ_E20NormalizedKernelTypeE10_M_managerERSt9_Any_dataRKSR_St18_Manager_operation" v="0x4169c0"/>
    <Procedure i="2818" n="_ZZN2cl4sycl7handler15ResetHostKernelIZZN14Polybench_Gemm3runERSt6vectorINS0_5eventESaIS5_EEENKUlRS1_E_clES9_EUlNS0_4itemILi2ELb1EEEE_SC_Li2EEENSt9enable_ifIXsr3std7is_sameIT0_NSB_IXT1_ELb1EEEEE5valueEPT_E4typeERKSH_EN20NormalizedKernelTypeclERKNS0_7nd_itemILi2EEE" v="0x416b60"/>
    <Procedure i="2983" n="&lt;program root&gt;" f="4" v="0"/>
    <Procedure i="2987" n="operator new(unsigned long)" v="0"/>
    <Procedure i="2989" n="free@plt" v="0"/>
    <Procedure i="2993" n="cl::sycl::queue::submit_impl(std::function&lt;void (cl::sycl::handler&amp;)&gt;, cl::sycl::detail::code_location const&amp;)" v="0"/>
    <Procedure i="2998" n="cl::sycl::handler::finalize()" v="0"/>
    <Procedure i="2996" n="cl::sycl::detail::queue_impl::submit_impl(std::function&lt;void (cl::sycl::handler&amp;)&gt; const&amp;, std::shared_ptr&lt;cl::sycl::detail::queue_impl&gt; const&amp;, std::shared_ptr&lt;cl::sycl::detail::queue_impl&gt; const&amp;, std::shared_ptr&lt;cl::sycl::detail::queue_impl&gt; const&amp;, cl::sycl::detail::code_location const&amp;, std::function&lt;void (bool, bool, cl::sycl::event&amp;)&gt; const*)" v="0"/>
    <Procedure i="3000" n="cl::sycl::detail::Scheduler::addCG(std::unique_ptr&lt;cl::sycl::detail::CG, std::default_delete&lt;cl::sycl::detail::CG&gt; &gt;, std::shared_ptr&lt;cl::sycl::detail::queue_impl&gt;)" v="0"/>
    <Procedure i="3002" n="cl::sycl::detail::Command::enqueue(cl::sycl::detail::EnqueueResultT&amp;, cl::sycl::detail::BlockingT, std::vector&lt;cl::sycl::detail::Command*, std::allocator&lt;cl::sycl::detail::Command*&gt; &gt;&amp;)" v="0"/>
    <Procedure i="3004" n="cl::sycl::detail::ExecCGCommand::enqueueImp()" v="0"/>
    <Procedure i="3008" n="explicit_bzero" v="0"/>
    <Procedure i="3010" n="pthread_attr_setschedparam" v="0"/>
    <Procedure i="3012" n="free" v="0"/>
  </ProcedureTable>
  <Info/>
</SecHeader>
<SecCallPathProfileData>
<PF i="2" s="2983" l="525" lm="2981" f="2982" n="2983">
<C i="3" s="2984" l="525" v="0xeaa8">
<PF i="4" s="260" l="0" lm="2" f="3" n="260">
<C i="5" s="263" l="0" v="0x403fcc">
<PF i="6" s="323" l="0" lm="2" f="3" n="323">
<C i="7" s="330" l="0" v="0x4045d0">
<PF i="8" s="1305" l="0" lm="2" f="3" n="1305">
<L i="9" s="1384" l="0" f="3" v="0x40b884">
<C i="10" s="1389" l="0" v="0x40b8e0">
<PF i="11" s="1445" l="0" lm="2" f="3" n="1445">
<S i="12" s="1446" l="0">
<M n="0" v="0.007951"/>
</S>
<C i="13" s="1449" l="0" v="0x40c57c">
<PF i="14" s="1785" l="0" lm="2" f="3" n="1785">
<C i="15" s="1789" l="0" v="0x40f408">
<PF i="16" s="3008" l="0" lm="3006" f="3007" n="3008">
<S i="17" s="3009" l="0">
<M n="0" v="0.022541"/>
</S>
</PF>
</C>
</PF>
</C>
<C i="18" s="1451" l="0" v="0x40c624">
<PF i="19" s="1785" l="0" lm="2" f="3" n="1785">
<C i="20" s="1789" l="0" v="0x40f408">
<PF i="21" s="3008" l="0" lm="3006" f="3007" n="3008">
<S i="22" s="3009" l="0">
<M n="0" v="0.005869"/>
</S>
</PF>
</C>
</PF>
</C>
</PF>
</C>
<C i="23" s="1394" l="0" v="0x40ba70">
<PF i="24" s="1460" l="0" lm="2" f="3" n="1460">
<C i="25" s="1462" l="0" v="0x40c9bc">
<PF i="26" s="2422" l="0" lm="2" f="3" n="2422">
<C i="27" s="2431" l="0" v="0x413b68">
<PF i="28" s="2993" l="0" lm="2991" f="2992" n="2993">
<C i="29" s="2994" l="0" v="0x35b904">
<PF i="30" s="2996" l="0" lm="2991" f="2995" n="2996">
<C i="31" s="2997" l="0" v="0x35b190">
<PF i="32" s="2998" l="0" lm="2991" f="2992" n="2998">
<C i="33" s="2999" l="0" v="0x336d48">
<PF i="34" s="3000" l="0" lm="2991" f="2995" n="3000">
<C i="35" s="3001" l="0" v="0x2ed2b4">
<PF i="36" s="3002" l="0" lm="2991" f="2995" n="3002">
<C i="37" s="3003" l="0" v="0x2da968">
<PF i="38" s="3004" l="0" lm="2991" f="2995" n="3004">
<C i="39" s="3005" l="0" v="0x2e6358">
<PF i="40" s="2737" l="0" lm="2" f="3" n="2737">
<C i="41" s="2746" l="0" v="0x4160ac">
<PF i="42" s="2751" l="0" lm="2" f="3" n="2751">
<C i="43" s="2757" l="0" v="0x416204">
<PF i="44" s="2765" l="0" lm="2" f="3" n="2765">
<L i="45" s="2802" l="0" f="3" v="0x4162e0">
<L i="46" s="2804" l="0" f="3" v="0x41633c">
<S i="47" s="2805" l="0">
<M n="0" v="0.015927"/>
</S>
<L i="48" s="2806" l="0" f="3" v="0x41638c">
<L i="49" s="2808" l="0" f="3" v="0x4163a8">
<S i="50" s="2809" l="0">
<M n="0" v="0.015952"/>
</S>
<C i="51" s="2810" l="0" v="0x4163e8">
<PF i="52" s="2816" l="0" lm="2" f="3" n="2816">
<C i="53" s="2817" l="0" v="0x416a34">
<PF i="54" s="2987" l="0" lm="2985" f="2986" n="2987">
<S i="55" s="2988" l="0">
<M n="0" v="0.007968"/>
</S>
</PF>
</C>
<S i="56" s="2817" l="0">
<M n="0" v="0.095703"/>
</S>
</PF>
</C>
<C i="57" s="2811" l="0" v="0x416464">
<PF i="58" s="2814" l="0" lm="2" f="3" n="2814">
<S i="59" s="2815" l="0">
<M n="0" v="0.007981"/>
</S>
</PF>
<PF i="60" s="2818" l="0" lm="2" f="3" n="2818">
<S i="61" s="2819" l="0">
<M n="0" v="0.127725"/>
</S>
<C i="62" s="2820" l="0" v="0x416d0c">
<PF i="63" s="2505" l="0" lm="2" f="3" n="2505">
<S i="64" s="2506" l="0">
<M n="0" v="0.039861"/>
</S>
<L i="65" s="2516" l="0" f="3" v="0x4144cc">
<S i="66" s="2517" l="0">
<M n="0" v="0.007976"/>
</S>
</L>
</PF>
</C>
<L i="67" s="2821" l="0" f="3" v="0x416b94">
<S i="68" s="2822" l="0">
<M n="0" v="0.007973"/>
</S>
</L>
<L i="69" s="2827" l="0" f="3" v="0x416ce0">
<S i="70" s="2828" l="0">
<M n="0" v="36.0119"/>
</S>
</L>
</PF>
</C>
<C i="71" s="2812" l="0" v="0x41647c">
<PF i="72" s="2816" l="0" lm="2" f="3" n="2816">
<C i="73" s="2817" l="0" v="0x416a80">
<PF i="74" s="2505" l="0" lm="2" f="3" n="2505">
<S i="75" s="2506" l="0">
<M n="0" v="0.047839"/>
</S>
<L i="76" s="2512" l="0" f="3" v="0x41444c">
<S i="77" s="2513" l="0">
<M n="0" v="0.007977"/>
</S>
</L>
<L i="78" s="2516" l="0" f="3" v="0x4144cc">
<S i="79" s="2517" l="0">
<M n="0" v="0.007976"/>
</S>
</L>
</PF>
</C>
<C i="80" s="2817" l="0" v="0x416a88">
<PF i="81" s="89" l="0" lm="2" f="3" n="89">
<S i="82" s="90" l="0">
<M n="0" v="0.007981"/>
</S>
</PF>
<PF i="83" s="2989" l="0" lm="2985" f="2986" n="2989">
<S i="84" s="2990" l="0">
<M n="0" v="0.007976"/>
</S>
</PF>
<PF i="85" s="3010" l="0" lm="3006" f="3007" n="3010">
<S i="86" s="3011" l="0">
<M n="0" v="0.047842"/>
</S>
</PF>
<PF i="87" s="3012" l="0" lm="3006" f="3007" n="3012">
<S i="88" s="3013" l="0">
<M n="0" v="0.047865"/>
</S>
</PF>
</C>
</PF>
</C>
</L>
</L>
</L>
</L>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</C>
<C i="89" s="1401" l="0" v="0x40bb6c">
<PF i="90" s="1502" l="0" lm="2" f="3" n="1502">
<C i="91" s="1507" l="0" v="0x40ce80">
<PF i="92" s="3008" l="0" lm="3006" f="3007" n="3008">
<S i="93" s="3009" l="0">
<M n="0" v="0.007993"/>
</S>
</PF>
</C>
<L i="94" s="1526" l="0" f="3" v="0x40d0d0">
<L i="95" s="1528" l="0" f="3" v="0x40d0f8">
<S i="96" s="1529" l="0">
<M n="0" v="0.0075"/>
</S>
</L>
</L>
<L i="97" s="1532" l="0" f="3" v="0x40d190">
<L i="98" s="1534" l="0" f="3" v="0x40d19c">
<S i="99" s="1535" l="0">
<M n="0" v="0.015964"/>
</S>
<L i="100" s="1536" l="0" f="3" v="0x40d1bc">
<S i="101" s="1537" l="0">
<M n="0" v="35.8664"/>
</S>
</L>
</L>
</L>
<L i="102" s="1538" l="0" f="3" v="0x40d234">
<L i="103" s="1540" l="0" f="3" v="0x40d238">
<S i="104" s="1541" l="0">
<M n="0" v="0.015962"/>
</S>
</L>
</L>
</PF>
</C>
</L>
</PF>
</C>
</PF>
</C>
</PF>
</C>
</PF>
</SecCallPathProfileData>
</SecCallPathProfile>
</HPCToolkitExperiment>
